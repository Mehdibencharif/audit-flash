import streamlit as st
import numpy as np
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Audit Flash Interactif", layout="centered")
st.title("\U0001F4A1 Audit Flash √ânerg√©tique")
st.markdown("""
Bienvenue dans l'outil interactif d'audit flash √©nerg√©tique. Ce formulaire vous permettra de prioriser vos crit√®res √† l'aide de la m√©thode **TOPSIS**, afin de recevoir un r√©sum√© personnalis√©.
""")
st.markdown("""
---
üîó Pour en savoir plus sur notre entreprise et nos services, visitez notre site :  
**[Soteck](https://www.soteck.com/fr)**
---
""")

# √âtape 1 : Infos g√©n√©rales
st.header("1. Informations g√©n√©rales")
nom = st.text_input("Nom complet")
entreprise = st.text_input("Nom de l'entreprise")
secteur = st.selectbox("Secteur d'activit√©", ["Industrie", "Tertiaire", "Agroalimentaire", "Autre"])
objectif = st.multiselect("Quels sont vos objectifs prioritaires ?", ["R√©duction de consommation", "R√©duction des co√ªts", "R√©duction des GES", "Am√©lioration du confort", "R√©duction de maintenance"])

# √âtape 2 : Pond√©ration simplifi√©e pour TOPSIS
st.header("2. Pond√©ration des crit√®res (TOPSIS simplifi√©)")
criteria = ["√ânergie", "Co√ªts", "Environnement", "Confort", "Maintenance"]
weights = []

st.markdown("Attribuez un poids (1 √† 10) √† chaque crit√®re selon son importance pour vous.")
for crit in criteria:
    weight = st.slider(f"Poids pour {crit}", 1, 10, 5, format="%d")
    weights.append(weight)

# Si bouton cliqu√©
if st.button("Calculer les priorit√©s avec TOPSIS"):
    df_weights = pd.DataFrame({"Crit√®re": criteria, "Poids": weights})
    df_weights["Poids normalis√©"] = df_weights["Poids"] / df_weights["Poids"].sum()

    st.success("Voici la pond√©ration normalis√©e de vos crit√®res :")
    st.dataframe(df_weights)

    fig = px.pie(df_weights, names="Crit√®re", values="Poids normalis√©", title="Priorisation des crit√®res")
    st.plotly_chart(fig)

    st.markdown("Un rapport peut √™tre g√©n√©r√© selon ces priorit√©s pour vous proposer des actions cibl√©es d√®s le premier contact.")

    # Analyse et r√©sum√© personnalis√©
    st.subheader("R√©sum√© personnalis√© des priorit√©s")
    top_criteria = df_weights.sort_values("Poids normalis√©", ascending=False).head(3)

    resume = f"""
Bonjour {nom if nom else "utilisateur"}, voici un aper√ßu de vos priorit√©s (m√©thode TOPSIS simplifi√©e) :

1. **{top_criteria.iloc[0]['Crit√®re']}** : Ce crit√®re est prioritaire. Nous vous proposerons des actions cibl√©es pour l'optimiser en priorit√©.
2. **{top_criteria.iloc[1]['Crit√®re']}** : Ce crit√®re arrive en deuxi√®me position, et sera int√©gr√© dans les recommandations secondaires.
3. **{top_criteria.iloc[2]['Crit√®re']}** : Ce crit√®re compl√®te votre trio de t√™te et pourra √™tre int√©gr√© dans les solutions compl√©mentaires.

Gr√¢ce √† cette hi√©rarchisation, un audit cibl√© pourra √™tre planifi√© avec un maximum d'efficacit√© et de pertinence.
"""
    st.markdown(resume)

    # Section r√©capitulative dynamique
    st.subheader("üìù R√©capitulatif du formulaire")
    st.write(f"**Nom** : {nom}")
    st.write(f"**Entreprise** : {entreprise}")
    st.write(f"**Secteur** : {secteur}")
    st.write(f"**Objectifs s√©lectionn√©s** : {', '.join(objectif)}")

    # Export des donn√©es
    st.subheader("üìä T√©l√©charger vos priorit√©s et informations")
    data_export = {
        "Nom": [nom],
        "Entreprise": [entreprise],
        "Secteur": [secteur],
        "Objectifs": [', '.join(objectif)]
    }
    for crit, wgt, norm in zip(df_weights["Crit√®re"], df_weights["Poids"], df_weights["Poids normalis√©"]):
        data_export[f"{crit} (poids)"] = [wgt]
        data_export[f"{crit} (normalis√©)"] = [norm]

    df_export = pd.DataFrame(data_export)
    csv = df_export.to_csv(index=False, sep=';').encode('utf-8-sig')
    st.download_button(
        label="üì• T√©l√©charger le r√©sum√© (.csv)",
        data=csv,
        file_name=f"resume_audit_flash_{nom.replace(' ', '_') if nom else 'utilisateur'}.csv",
        mime="text/csv"
    )
